(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{559:function(r,t,_){"use strict";_.r(t);var v=_(4),a=Object(v.a)({},(function(){var r=this,t=r.$createElement,_=r._self._c||t;return _("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[_("div",{staticClass:"custom-block tip"},[_("p",[r._v("MIT6.824课程学习记录，第一部分课程介绍及资源记录")])]),r._v(" "),_("h2",{attrs:{id:"课程资源"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#课程资源"}},[r._v("#")]),r._v(" 课程资源")]),r._v(" "),_("p",[_("a",{attrs:{href:"https://pdos.csail.mit.edu/6.824/index.html",target:"_blank",rel:"noopener noreferrer"}},[r._v("课程主页"),_("OutboundLink")],1),_("br"),r._v(" "),_("a",{attrs:{href:"https://pdos.csail.mit.edu/6.824/schedule.html",target:"_blank",rel:"noopener noreferrer"}},[r._v("2020年春季课程地址"),_("OutboundLink")],1),_("br"),r._v(" "),_("a",{attrs:{href:"http://thesecretlivesofdata.com/raft/",target:"_blank",rel:"noopener noreferrer"}},[r._v("raft协议可视化解释"),_("OutboundLink")],1),_("br"),r._v(" "),_("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/110168818",target:"_blank",rel:"noopener noreferrer"}},[r._v("如何才能更好的学习 MIT 6.824---知乎"),_("OutboundLink")],1)]),r._v(" "),_("h2",{attrs:{id:"基础介绍"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#基础介绍"}},[r._v("#")]),r._v(" 基础介绍")]),r._v(" "),_("p",[_("a",{attrs:{href:"https://pdos.csail.mit.edu/6.824/notes/l01.txt",target:"_blank",rel:"noopener noreferrer"}},[r._v("英文介绍"),_("OutboundLink")],1)]),r._v(" "),_("h3",{attrs:{id:"什么是分布式系统"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#什么是分布式系统"}},[r._v("#")]),r._v(" 什么是分布式系统")]),r._v(" "),_("p",[r._v("简单来说：分布式系统就是由多个计算机协作组成的系统，包含为大型网站设计的存储、MapReduce、p2p共享等等。关键的架构会分散在各个地方。")]),r._v(" "),_("h3",{attrs:{id:"为什么要构建分布式系统？"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#为什么要构建分布式系统？"}},[r._v("#")]),r._v(" 为什么要构建分布式系统？")]),r._v(" "),_("ul",[_("li",[r._v("通过并行提高性能")]),r._v(" "),_("li",[r._v("通过备份容忍错误")]),r._v(" "),_("li",[r._v("将计算机更加靠近外部实体")]),r._v(" "),_("li",[r._v("通过隔离保证安全"),_("br"),r._v("\n但是并非没有代价：")]),r._v(" "),_("li",[r._v("会有大量并发、复杂的交互")]),r._v(" "),_("li",[r._v("必须处理部分失败的情况")]),r._v(" "),_("li",[r._v("难以发挥性能潜力")])]),r._v(" "),_("h3",{attrs:{id:"为什么要学习这门课程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#为什么要学习这门课程"}},[r._v("#")]),r._v(" 为什么要学习这门课程")]),r._v(" "),_("ul",[_("li",[r._v("有趣，你会碰到难题和有力的解答")]),r._v(" "),_("li",[r._v("应用在实际系统中，由大型网站的崛起推动此类的开发")]),r._v(" "),_("li",[r._v("活跃的研究领域，有很多重要的未解决的问题")]),r._v(" "),_("li",[r._v("动手，你可以在实验室中建立一个真实的系统")])]),r._v(" "),_("h3",{attrs:{id:"课程中将做的一些活动"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#课程中将做的一些活动"}},[r._v("#")]),r._v(" 课程中将做的一些活动")]),r._v(" "),_("p",[r._v("讲座、阅读论文、考试、实验和最后的大项目")]),r._v(" "),_("h2",{attrs:{id:"主要课题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#主要课题"}},[r._v("#")]),r._v(" 主要课题")]),r._v(" "),_("p",[r._v("这是一门关于构建应用的课程：")]),r._v(" "),_("ul",[_("li",[r._v("存储")]),r._v(" "),_("li",[r._v("通信")]),r._v(" "),_("li",[r._v("计算")])]),r._v(" "),_("p",[r._v("最大的目标：隐藏分布式的复杂性")]),r._v(" "),_("p",[r._v("主题（这些主题会反复出现在课程中）：")]),r._v(" "),_("h3",{attrs:{id:"实现："}},[_("a",{staticClass:"header-anchor",attrs:{href:"#实现："}},[r._v("#")]),r._v(" 实现：")]),r._v(" "),_("p",[r._v("RPC、线程、并发控制等等"),_("br"),r._v("\n相关实验：所有")]),r._v(" "),_("h3",{attrs:{id:"性能："}},[_("a",{staticClass:"header-anchor",attrs:{href:"#性能："}},[r._v("#")]),r._v(" 性能：")]),r._v(" "),_("p",[r._v("目标：吞吐量可扩展"),_("br"),r._v("\n即N台server可以通过cpu、硬盘及网络提供N的吞吐量。"),_("br"),r._v("\n那么针对更多的请求只需要增加更多的主机，而不用重新设计系统。"),_("br"),r._v("\n高效划分工作，而无需太多干预。")]),r._v(" "),_("p",[r._v("当N增大时，扩展会变得更加困难"),_("br"),r._v("\n例如，负载不均衡、混乱、N中延迟最大的部分、非并行化代码（初始化、交互）、共享资源的瓶颈（如网络等）。")]),r._v(" "),_("p",[r._v("一些在扩展中出现的性能问题不好解决："),_("br"),r._v("\n如："),_("br"),r._v("\n快速响应单个用户的请求"),_("br"),r._v("\n所有用户希望同时更新相同的数据"),_("br"),r._v("\n这些都需要更好的设计而不是更多的计算机"),_("br"),r._v("\n相关实验：Lab 4")]),r._v(" "),_("h3",{attrs:{id:"容错"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#容错"}},[r._v("#")]),r._v(" 容错")]),r._v(" "),_("p",[r._v("上千台服务器，大型网络，总是会出现损坏。"),_("br"),r._v("\n我们需要对应用隐藏这些错误。"),_("br"),r._v("\n通常我们希望具有："),_("br"),r._v("\n可用性--应用在运行中可以忽略这类错误"),_("br"),r._v("\n可恢复性--应用可以在错误修复后恢复"),_("br"),r._v("\n相关实验：Lab 1，2，3")]),r._v(" "),_("h3",{attrs:{id:"一致性"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#一致性"}},[r._v("#")]),r._v(" 一致性")]),r._v(" "),_("p",[r._v("通用架构需要有明确定义的行为。"),_("br"),r._v("\n但是实现好的行为十分困难：")]),r._v(" "),_("ul",[_("li",[r._v("副本服务器很难保证相同")]),r._v(" "),_("li",[r._v("客户端可能在多步更新中间宕机")]),r._v(" "),_("li",[r._v("服务器可能出现宕机，如在处理完但是回应前。")]),r._v(" "),_("li",[r._v("网络出现分区，导致存活的服务器看起来死亡了，如“脑裂”"),_("br"),r._v("\n一致性和性能是一对敌人："),_("br"),r._v("\n强一致性需要通信。"),_("br"),r._v("\n很多设计为了速度，仅提供弱一致性。"),_("br"),r._v("\n在一致性/性能范围内会有很多的设计要点。")])])])}),[],!1,null,null,null);t.default=a.exports}}]);